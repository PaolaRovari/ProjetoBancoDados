// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoBancoDados.Models;

#nullable disable

namespace ProjetoBancoDados.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20240215110919_Criacao-Inicial")]
    partial class CriacaoInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjetoBancoDados.Models.Artista", b =>
                {
                    b.Property<int>("ArtistaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ArtistaId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtistaId"));

                    b.Property<DateTime>("DataNascimentoFalecimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataNascimentoFalecimento");

                    b.Property<string>("NacionalidadeArtista")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NacionalidadeArtista");

                    b.Property<string>("NomeArtista")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeArtista");

                    b.HasKey("ArtistaId");

                    b.ToTable("Artista");
                });

            modelBuilder.Entity("ProjetoBancoDados.Models.Lugar", b =>
                {
                    b.Property<int>("LugarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LugarId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LugarId"));

                    b.Property<string>("HorarioFuncionamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HorarioFuncionamento");

                    b.Property<string>("NomeLugar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeLugar");

                    b.HasKey("LugarId");

                    b.ToTable("Lugar");
                });

            modelBuilder.Entity("ProjetoBancoDados.Models.LugarVisita", b =>
                {
                    b.Property<int>("LugarVisitaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LugarVisitaId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LugarVisitaId"));

                    b.Property<int>("LugarId")
                        .HasColumnType("int");

                    b.Property<int>("VisitaId")
                        .HasColumnType("int");

                    b.HasKey("LugarVisitaId");

                    b.HasIndex("LugarId");

                    b.HasIndex("VisitaId");

                    b.ToTable("LugarVisita");
                });

            modelBuilder.Entity("ProjetoBancoDados.Models.ObraDeArte", b =>
                {
                    b.Property<int>("ObraDeArteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ObraDeArteId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ObraDeArteId"));

                    b.Property<int?>("ArtistaId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacaoObra")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacaoObra");

                    b.Property<int?>("LugarId1")
                        .HasColumnType("int");

                    b.Property<string>("NomeObra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeObra");

                    b.Property<string>("TecnicaObra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TecnicaObra");

                    b.Property<string>("ValorObra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ValorObra");

                    b.HasKey("ObraDeArteId");

                    b.HasIndex("ArtistaId1");

                    b.HasIndex("LugarId1");

                    b.ToTable("ObraDeArte");
                });

            modelBuilder.Entity("ProjetoBancoDados.Models.Visita", b =>
                {
                    b.Property<int>("VisitaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VisitaId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitaId"));

                    b.Property<DateTime>("DataVisita")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataVisita");

                    b.HasKey("VisitaId");

                    b.ToTable("Visita");
                });

            modelBuilder.Entity("ProjetoBancoDados.Models.Visitante", b =>
                {
                    b.Property<int>("VisitanteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VisitanteId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitanteId"));

                    b.Property<string>("EmailVisitante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EmailVisitante");

                    b.Property<string>("NomeVisitante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeVisitante");

                    b.Property<string>("TelefoneVisitante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TelefoneVisitante");

                    b.Property<int?>("VisitaId1")
                        .HasColumnType("int");

                    b.HasKey("VisitanteId");

                    b.HasIndex("VisitaId1");

                    b.ToTable("Visitante");
                });

            modelBuilder.Entity("ProjetoBancoDados.Models.LugarVisita", b =>
                {
                    b.HasOne("ProjetoBancoDados.Models.Lugar", "Lugar")
                        .WithMany()
                        .HasForeignKey("LugarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoBancoDados.Models.Visita", "Visita")
                        .WithMany()
                        .HasForeignKey("VisitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lugar");

                    b.Navigation("Visita");
                });

            modelBuilder.Entity("ProjetoBancoDados.Models.ObraDeArte", b =>
                {
                    b.HasOne("ProjetoBancoDados.Models.Artista", "Artista")
                        .WithMany()
                        .HasForeignKey("ArtistaId1");

                    b.HasOne("ProjetoBancoDados.Models.Lugar", "Lugar")
                        .WithMany()
                        .HasForeignKey("LugarId1");

                    b.Navigation("Artista");

                    b.Navigation("Lugar");
                });

            modelBuilder.Entity("ProjetoBancoDados.Models.Visitante", b =>
                {
                    b.HasOne("ProjetoBancoDados.Models.Visita", "Visita")
                        .WithMany()
                        .HasForeignKey("VisitaId1");

                    b.Navigation("Visita");
                });
#pragma warning restore 612, 618
        }
    }
}
